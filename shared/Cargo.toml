[package]
name = "shared"
version.workspace = true
edition.workspace = true

[dependencies]
serde.workspace = true
uuid.workspace = true
chrono.workspace = true
sha1 = { workspace = true, optional = true }
hex = { workspace = true, optional = true }
url = { workspace = true, optional = true }
indexmap = { workspace = true, optional = true }
bincode = { workspace = true, optional = true }
serde-pickle = { workspace = true, optional = true }
serde_with = { workspace = true, optional = true }
thiserror = { workspace = true, optional = true }
half = { workspace = true, optional = true }
opendal = { workspace = true, optional = true }
anyhow = { workspace = true, optional = true }
qdrant-client = { workspace = true, optional = true }
pyo3 = { workspace = true, optional = true }
pyo3-stub-gen = { workspace = true, optional = true }
pyo3-stub-gen-derive = { workspace = true, optional = true }
tracing = { workspace = true, optional = true }
tracing-subscriber = { workspace = true, optional = true }
rayon = { workspace = true, optional = true }
hnsw_rs = { workspace = true, optional = true }

[dev-dependencies]
rand.workspace = true
rand_pcg.workspace = true

[lib]
name = "shared"
crate-type = ["rlib", "cdylib"]

[[bin]]
name = "stub_gen"
doc = false

[features]
default = ["shared-structure"]
shared-structure = []
tracings = ["tracing", "tracing-subscriber"]
neko-uuid = ["sha1", "hex", "thiserror", "uuid/v5"]
cosine-sim = ["half"]
opendal-data-compat = []
opendal-ext = ["opendal", "anyhow"]
qdrant-ext = ["qdrant-client", "anyhow"]
point-explorer = ["cosine-sim", "url", "thiserror", "serde_with", "serde-pickle", "bincode", "indexmap"]
shared-pyo3 = ["pyo3", "pyo3-stub-gen", "pyo3-stub-gen-derive"]
point-explorer-pyo3 = ["shared-pyo3", "point-explorer"]
hnsw = ["hnsw_rs", "point-explorer", "rayon"]
hnsw-pyo3 = ["shared-pyo3", "hnsw"]